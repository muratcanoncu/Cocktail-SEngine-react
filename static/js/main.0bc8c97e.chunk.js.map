{"version":3,"sources":["img/5cocktail.jpg","Components/cocktailSearch.js","img/mainBground.jpeg","Components/content.js","App.js","reportWebVitals.js","index.js"],"names":["cocktailSearch","cocktailContext","useContext","UserContext","className","style","backgroundImage","CocktailBG","backgroundPosition","backgroundSize","backgroundRepeat","height","borderBottom","paddingBottom","border","borderRadius","fontSize","placeholder","onChange","e","contentDispatch","type","payload","target","value","content","Consumer","contextState","console","log","contentState","noData","MainBG","padding","cocktailData","map","cocktail","loaded","width","color","textShadow","strDrink","src","strDrinkThumb","strGlass","strInstructions","strInstructionsDE","listStyleType","textAlign","strMeasure1","strIngredient1","strMeasure2","strIngredient2","strMeasure3","strIngredient3","strMeasure4","strIngredient4","strMeasure5","strIngredient5","strMeasure6","strIngredient6","strVideo","href","idDrink","React","createContext","initialState","keyWord","reducer","state","action","App","useReducer","myCocktailState","dispatch","useEffect","fetch","then","response","json","drinks","catch","error","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bc8c97e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/5cocktail.971e120e.jpg\";","import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../App\";\nimport CocktailBG from \"../img/5cocktail.jpg\";\nfunction cocktailSearch() {\n  const cocktailContext = useContext(UserContext);\n\n  return (\n    <div\n      className=\"w-100 d-flex justify-content-center align-items-center flex-column\"\n      style={{\n        backgroundImage: `url(${CocktailBG})`,\n        backgroundPosition: \"top\",\n        backgroundSize: \"100% 600px\",\n        backgroundRepeat: \"no-repeat\",\n        height: \"550px\",\n        borderBottom: \"4px solid orange\",\n        paddingBottom: \"120px\",\n      }}\n    >\n      <h1 className=\"mb-5 text-white font-italic\">Hello,My Lovely Ilke</h1>\n      <input\n        className=\"w-25 py-1 px-2\"\n        style={{\n          border: \"none\",\n          borderRadius: \"15px\",\n          fontSize: \"1.3rem\",\n        }}\n        placeholder=\"Please Enter A Cocktail Name\"\n        onChange={(e) => {\n          cocktailContext.contentDispatch({\n            type: \"KEYWORD_UPDATED\",\n            payload: e.target.value,\n          });\n        }}\n      ></input>\n    </div>\n  );\n}\n\nexport default cocktailSearch;\n","export default __webpack_public_path__ + \"static/media/mainBground.85948e67.jpeg\";","import React from \"react\";\nimport { UserContext } from \"../App\";\nimport MainBG from \"../img/mainBground.jpeg\";\nfunction content() {\n  return (\n    <UserContext.Consumer>\n      {(contextState) => {\n        console.log(contextState.contentState.noData);\n        return (\n          <div\n            className=\"d-flex flex-wrap justify-content-around\"\n            style={{\n              backgroundImage: `url(${MainBG})`,\n              backgroundRepeat: \"repeat-y\",\n              backgroundSize: \"100% 300vh\",\n              padding: \"40px 0\",\n              height: \"600vh\",\n            }}\n          >\n            {contextState.contentState.cocktailData.map((cocktail) => {\n              if (contextState.contentState.loaded) {\n                return (\n                  <div\n                    key={cocktail.idDrink}\n                    className=\"mx-4 my-3 px-3\"\n                    style={{\n                      border: \"1px solid orange\",\n                      borderRadius: \"15px\",\n                      width: \"40%\",\n                      color: \"white\",\n                      textShadow: \"2px 2px black\",\n                    }}\n                  >\n                    <h3>Name: {cocktail.strDrink}</h3>\n                    <img\n                      src={cocktail.strDrinkThumb}\n                      className=\"w-25 my-2\"\n                      style={{ borderRadius: \"15px\" }}\n                    ></img>\n                    <div>\n                      <p>Glass type: {cocktail.strGlass}</p>\n                      <p>\n                        <b>Preparation[En]:</b> {cocktail.strInstructions}\n                      </p>\n                      <p>\n                        <b>Preparation[De]:</b> {cocktail.strInstructionsDE}\n                      </p>\n                      <ul\n                        style={{\n                          listStyleType: \"none\",\n                          width: \"100%\",\n                          textAlign: \"left\",\n                        }}\n                      >\n                        <h4>Ingredients:</h4>\n                        <li>\n                          {cocktail.strMeasure1} {cocktail.strIngredient1}\n                        </li>\n                        <li>\n                          {cocktail.strMeasure2} {cocktail.strIngredient2}\n                        </li>\n                        <li>\n                          {cocktail.strMeasure3} {cocktail.strIngredient3}\n                        </li>\n                        <li>\n                          {cocktail.strMeasure4} {cocktail.strIngredient4}\n                        </li>\n                        <li>\n                          {cocktail.strMeasure5} {cocktail.strIngredient5}\n                        </li>\n                        <li>\n                          {cocktail.strMeasure6} {cocktail.strIngredient6}\n                        </li>\n                      </ul>\n                      {cocktail.strVideo ? (\n                        <p>\n                          <a href={cocktail.strVideo}>Preparation Video</a>\n                        </p>\n                      ) : null}\n                    </div>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        );\n      }}\n    </UserContext.Consumer>\n  );\n}\n\nexport default content;\n","import React, { useEffect, useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n//! Components\nimport CocktailSearch from \"./Components/cocktailSearch\";\nimport Content from \"./Components/content\";\n\nexport const UserContext = React.createContext();\n\nconst initialState = {\n  keyWord: \"\",\n  cocktailData: [],\n  loaded: false,\n  noData: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"KEYWORD_UPDATED\":\n      return {\n        ...state,\n        keyWord: action.payload,\n        loaded: true,\n      };\n    case \"COCKTAIL_ASKED\":\n      return {\n        ...state,\n        cocktailData: action.payload,\n        noData: false,\n      };\n    case \"NO_COCKTAIL\":\n      return {\n        ...state,\n        cocktailData: action.payload,\n        noData: true,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [myCocktailState, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${myCocktailState.keyWord}`\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.drinks) {\n          dispatch({\n            type: \"COCKTAIL_ASKED\",\n            payload: response.drinks,\n          });\n        } else {\n          dispatch({\n            type: \"NO_COCKTAIL\",\n            payload: [],\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Eroorrr\");\n        console.log(error);\n      });\n  }, [myCocktailState.keyWord]);\n  return (\n    <UserContext.Provider\n      value={{ contentState: myCocktailState, contentDispatch: dispatch }}\n    >\n      <div className=\"App\">\n        <CocktailSearch></CocktailSearch>\n        <Content></Content>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}